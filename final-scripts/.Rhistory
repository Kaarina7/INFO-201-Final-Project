tags$div(
id = "OverviewSection1",
tags$h3(
id = "OverviewSubHeader",
"Choice of Domain: "
),
p(
"We are business, economics, and computational finance majors. We decided
to center our projects around something that relates to something in
this area. We felt that the field of housing markets intersected all of
our major-related interests, so we chose to focus on it for our project."
),
tags$h3(
id = "OverviewSubHeader",
"Our Data sets: "
),
p("The data sets we decided to use come from Zillow. Zillow regularly
gathers information about all of the homes listed for sale
on their website and makes it publicly  available, and we decided to
make use of several pieces of it. The first lists the median housing
prices across the nation according to different regional categories.
It can be used to answer questions about how house prices vary by
geographic region, as well as how they've changed over the past ten
years. The second lists the average number of days a listing stays on
Zillow by region. This can be used to examine changes in the speed
with which houses sell in different areas."
),
tags$h3(
id = "OverviewSubHeader",
"Links to Data Sets: "
),
tags$a(
id = "links",
href = "https://data.world/zillow-data/median-list-price", "Median Price"
),
tags$a(
id = "links",
href = "https://data.world/zillow-data/days-on-zillow", "Days on Zillow"
),
tags$h3(
id = "OverviewSubHeader",
"Purpose: "
),
p(
"Analysis from the median listing prices can be compared to other
economic factors to see how the housing markets have changed related to
them. Further research can be done to see what events or policies
contributed to these changes. The analysis will also explore where and
when hosuing prices are the greatest/least and where/when major changes
have happened. Additionally, insights on where and how long houses stay
on the market for the longest or the least can be discovered."
)
),
tags$div(
id = "OverviewSection2",
tags$h3(
id = "OverviewSubHeader",
"Visualizations: "
),
tags$h3(
id = "VisualSubHeader",
"Bar Chart"
),
p(
"The first visualization is a bar chart that shows how the average
median listing price changed from 2010 - 2017."
),
tags$h3(
id = "VisualSubHeader",
"Map"
),
p(
"The second visualization is an interactive map that shows the different
locations of the houses."
),
tags$h3(
id = "VisualSubHeader",
"Days on Market"
),
p(
"The third visualization is a line graph about how long the different
houses on Zillow have been on the market for. "
)
)
)
)
change <- 299414 - 238738
per_change <- round((((change) / 299414) * 100), 2)
link <- tags$a(
href = "https://fred.stlouisfed.org/series/MEHOINUSA672N",
"10%"
)
conclusions <- tabPanel(
title = "Conclusions",
tags$h2(
"Conclusions From Our Data "
),
tags$div(
tags$h4(
id = "ColncldusionSubHeader",
"Conclusions from Visualization3"
),
h2(
"Economic Conclusions"
)
),
p(paste0("The price in 2017 was $299414 and at its lowest point in 2011 was
$238738. The price increases by $", change,
" which is an increase of ", per_change, "%")),
p("In the same time that the hosuing price has increased by ", per_change,
"the % increase in household income has risen by,", link),
plotlyOutput(outputId = "conclusion1", width = "100%"),
h2(
"Hosuing Market Insights"
)
)
ui <- fluidPage(
includeCSS("style.css"),
tags$h1(
id = "Page_Header",
"Zillow Housing Information (2010 - 2017)"
),
navbarPage(
title = "Navigation Bar",
overviewInformation,
bar,
map,
line,
conclusions,
position = "static-top",
inverse = TRUE,
theme = "style.css",
tags$style(
id = "NavBarHeader",
position = "static-top"
)
)
)
shinyApp(ui = ui, server = server)
library(shiny)
source("bar-chart-function.R")
source("line_tab.R")
source("map_tab.R")
source("intro_and_summary.R")
source("styles.css")
bar <- tabPanel(
title = "Change in House Prices",
h1("Change in House Prices"),
p("This bar graph attempts to answer questions about how house prices have
changed over the years, and how city size is related to changes in house
price. The length encoding (bar graph) was selected because differences
between values can be easily seen with length. So it is very effective
to see these trends when working with a small range of
noncontinuous x values (years 2010 to 2017)"),
sidebarLayout(
sidebarPanel(
# slider for the range of years
sliderInput("range", "Year Range",
min = 2010, max = 2017,
value = c(2010, 2017)),
# slider for the size ranks
sliderInput("size_rank", "Size Rank (1 is largest population)",
min = 1, max = 7080,
value = c(1, 7080)
)
),
mainPanel(
# outputs the bar graph
plotlyOutput(outputId = "bar_graph"),
p("")
)
)
)
map <- tabPanel(
title = "House Prices vs. Time",
h1("Geographic Change in House Prices vs. Time"),
sidebarLayout(
mainPanel(
p("This map helps answer the question of how median house prices have changed
geographically over time. The map encoding was chosen because it is easiest
for the user to visually track geographic movements by watching the points
change."),
leafletOutput("map")
),
sidebarPanel(
# choose the year to view
selectInput(
"date",
label = "Choose the date",
choices = colnames(city_location)[6:98]
)
)
)
)
line <- tabPanel(
title = "Days Listed Online",
sidebarLayout(
sidebarPanel(
# take inputs here
selectInput(input = "location_type", label = "Select a region type",
choices = c("County", "State"), selected = "County"),
textInput(inputId = "location_name", label = "Enter the region name",
value = "King"),
textInput(inputId = "if_state", "If you've entered a county name, enter
its state code here:", value = "WA")
),
mainPanel(
# show graph here
p("This line graph looks at the average number of days a house remains
listed on Zillow by time, and it breaks the data down by region.
It answers questions such as \"When did houses take the longest time to
sell?\", and it uses the inputs to the left to decide which region to show.
The default below is an example of King County, Washington.",
style = "font-size:18px"
),
plotOutput("line_graph"),
p("The graphs clearly show that over the years, selling a house has
become a quicker process. Even more pronounced in the difference in time
it takes to sell a house by season. Depending on the location, houses
listed on Zillow in Winter and Fall can take nearly twice as long to sell
as those listed in Spring and Summer.",
style = "font-size:18px"
)
)
)
)
overviewInformation <- tabPanel(
title = "Overview",
tags$body(
id = "Body",
tags$div(
id = "OverviewSection1",
tags$h3(
id = "OverviewSubHeader",
"Choice of Domain: "
),
p(
"We are business, economics, and computational finance majors. We decided
to center our projects around something that relates to something in
this area. We felt that the field of housing markets intersected all of
our major-related interests, so we chose to focus on it for our project."
),
tags$h3(
id = "OverviewSubHeader",
"Our Data sets: "
),
p("The data sets we decided to use come from Zillow. Zillow regularly
gathers information about all of the homes listed for sale
on their website and makes it publicly  available, and we decided to
make use of several pieces of it. The first lists the median housing
prices across the nation according to different regional categories.
It can be used to answer questions about how house prices vary by
geographic region, as well as how they've changed over the past ten
years. The second lists the average number of days a listing stays on
Zillow by region. This can be used to examine changes in the speed
with which houses sell in different areas."
),
tags$h3(
id = "OverviewSubHeader",
"Links to Data Sets: "
),
tags$a(
id = "links",
href = "https://data.world/zillow-data/median-list-price", "Median Price"
),
tags$a(
id = "links",
href = "https://data.world/zillow-data/days-on-zillow", "Days on Zillow"
),
tags$h3(
id = "OverviewSubHeader",
"Purpose: "
),
p(
"Analysis from the median listing prices can be compared to other
economic factors to see how the housing markets have changed related to
them. Further research can be done to see what events or policies
contributed to these changes. The analysis will also explore where and
when hosuing prices are the greatest/least and where/when major changes
have happened. Additionally, insights on where and how long houses stay
on the market for the longest or the least can be discovered."
)
),
tags$div(
id = "OverviewSection2",
tags$h3(
id = "OverviewSubHeader",
"Visualizations: "
),
tags$h3(
id = "VisualSubHeader",
"Bar Chart"
),
p(
"The first visualization is a bar chart that shows how the average
median listing price changed from 2010 - 2017."
),
tags$h3(
id = "VisualSubHeader",
"Map"
),
p(
"The second visualization is an interactive map that shows the different
locations of the houses."
),
tags$h3(
id = "VisualSubHeader",
"Days on Market"
),
p(
"The third visualization is a line graph about how long the different
houses on Zillow have been on the market for. "
)
)
)
)
change <- 299414 - 238738
per_change <- round((((change) / 299414) * 100), 2)
link <- tags$a(
href = "https://fred.stlouisfed.org/series/MEHOINUSA672N",
"10%"
)
conclusions <- tabPanel(
title = "Conclusions",
tags$h2(
"Conclusions From Our Data "
),
tags$div(
tags$h4(
id = "ColncldusionSubHeader",
"Conclusions from Visualization3"
),
h2(
"Economic Conclusions"
)
),
p(paste0("The price in 2017 was $299414 and at its lowest point in 2011 was
$238738. The price increases by $", change,
" which is an increase of ", per_change, "%")),
p("In the same time that the hosuing price has increased by ", per_change,
"the % increase in household income has risen by,", link),
plotlyOutput(outputId = "conclusion1", width = "100%"),
h2(
"Hosuing Market Insights"
)
)
ui <- fluidPage(
includeCSS("style.css"),
tags$h1(
id = "Page_Header",
"Zillow Housing Information (2010 - 2017)"
),
navbarPage(
title = "Navigation Bar",
overviewInformation,
bar,
map,
line,
conclusions,
position = "static-top",
inverse = TRUE,
theme = "style.css",
tags$style(
id = "NavBarHeader",
position = "static-top"
)
)
)
shinyApp(ui = ui, server = server)
library(shiny)
source("bar_tab.R")
source("line_tab.R")
source("map_tab.R")
source("intro_and_summary.R")
source("styles.css")
server <- function(input, output) {
# outputs the bar chart given selected year and size range
output$bar_graph <- renderPlotly({
bar_graph(city_data, (input$range[1] - 2009):(input$range[2] - 2009),
input$size_rank)
})
output$map = renderLeaflet({
# create map with details
city_map <- leaflet(data = city_location) %>%
addTiles() %>%
setView(lng = -96, lat = 40, zoom = 4) %>%
addCircles(
lat = ~lat,
lng = ~lng,
radius = ~0.025 * city_location[[input$date]],
stroke = FALSE,
label = lapply(point_labels, htmltools::HTML)
)
})
output$line_graph <- renderPlot({
line_graph <- function(region_type, region_name, state_code = NULL) {
# deal with user input and use it to select the proper dataset
region_type <- tolower(region_type)
region_name <- tolower(region_name)
if (region_type == "state") {
state_code <- NULL
df <- days_listed_state
relevant_data <- df[df$RegionName == region_name, ]
} else { # region_type is equal to county
df <- days_listed_county
state_code <- toupper(state_code)
df <- filter(df, df[["StateName"]] == state_code)
relevant_data <- df[df$RegionName == region_name, ]
}
# clean the data to make it graph ready
relevant_data <- as.data.frame(t(as.matrix(relevant_data)))
names(relevant_data) <- as.matrix(relevant_data[1, ])
relevant_data <- tibble::rownames_to_column(relevant_data, "Dates")
relevant_data <- relevant_data[-1, ]
if (region_type == "county") {
relevant_data <- relevant_data[-1, ]
}
relevant_data[[region_name]] <-
as.numeric(relevant_data[[region_name]])
# format labels for use in graph
season_labels <- paste(rep(c("Winter\n", "Spring\n", "Summer\n",
"Fall\n"), each = 3), rep(2010:2017, each = 12))
for (n in 1:96) {
if (n %% 3 != 1) {
season_labels[n] <- ""
}
}
# make the graph
ggplot(relevant_data, aes(x = Dates, y = .data[[region_name]],
group = 1)) + geom_line() +
labs(title = paste0("Average Days a Home is Listed on Zillow in ",
str_to_title(region_name),
ifelse(is.null(state_code), " State",
paste(" County,", toupper(state_code)))),
y = "Number of Days") +
scale_x_discrete(labels = season_labels) + geom_point() +
theme(axis.text.x = element_text(angle = 90)) +
geom_line(color = "blue")
}
return(
line_graph(input$location_type, input$location_name, input$if_state)
)
})
output$conclusion1 <- renderPlotly({
source("aggregate_Table.R")
change_in_price <- city_data %>%
select(X2010.01, X2017.09) %>%
drop_na() %>%
summarise(
Jan.2010 = mean(X2010.01),
Sep.2017 = mean(X2017.09)
) %>%
gather(key = "Year", value = "List.Price")
##
price_change_plot <- ggplot(change_in_price) +
geom_bar(mapping = aes( x = Year, y = List.Price,
text = paste0("Price = $",
round(List.Price, 2))),
stat = "identity", fill = "Blue")
return(ggplotly(price_change_plot, tooltip = "text"))
})
output$line_graph <- renderPlot({
line_graph <- function(region_type, region_name, state_code = NULL) {
# deal with user input and use it to select the proper dataset
region_type <- tolower(region_type)
region_name <- tolower(region_name)
if (region_type == "state") {
state_code <- NULL
df <- days_listed_state
relevant_data <- df[df$RegionName == region_name, ]
} else { # region_type is equal to county
df <- days_listed_county
state_code <- toupper(state_code)
df <- filter(df, df[["StateName"]] == state_code)
relevant_data <- df[df$RegionName == region_name, ]
}
# clean the data to make it graph ready
relevant_data <- as.data.frame(t(as.matrix(relevant_data)))
names(relevant_data) <- as.matrix(relevant_data[1, ])
relevant_data <- tibble::rownames_to_column(relevant_data, "Dates")
relevant_data <- relevant_data[-1, ]
if (region_type == "county") {
relevant_data <- relevant_data[-1, ]
}
relevant_data[[region_name]] <-
as.numeric(relevant_data[[region_name]])
# format labels for use in graph
season_labels <- paste(rep(c("Winter\n", "Spring\n", "Summer\n",
"Fall\n"), each = 3), rep(2010:2017, each = 12))
for (n in 1:96) {
if (n %% 3 != 1) {
season_labels[n] <- ""
}
}
# make the graph
ggplot(relevant_data, aes(x = Dates, y = .data[[region_name]],
group = 1)) + geom_line() +
labs(title = paste0("Average Days a Home is Listed on Zillow in ",
str_to_title(region_name),
ifelse(is.null(state_code), " State",
paste(" County,", toupper(state_code)))),
y = "Number of Days") +
scale_x_discrete(labels = season_labels) + geom_point() +
theme(axis.text.x = element_text(angle = 90)) +
geom_line(color = "blue")
}
return(
line_graph(input$location_type, input$location_name, input$if_state)
)
})
}
shinyApp(ui = ui, server = server)
