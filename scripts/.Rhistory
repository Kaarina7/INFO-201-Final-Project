filter_all(!is.na())
# selects year columns and summarizes average median prices each year
city_summary <- city_data %>%
select(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01, X2016.01,
X2017.01) %>%
filter_all(!= is.na())
# selects year columns and summarizes average median prices each year
city_summary <- city_data %>%
select(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01, X2016.01,
X2017.01) %>%
filter_all(is.na(.))
# selects year columns and summarizes average median prices each year
city_summary <- city_data %>%
select(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01, X2016.01,
X2017.01) %>%
filter_all(!is.na(.))
# selects year columns and summarizes average median prices each year
city_summary <- city_data %>%
select(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01, X2016.01,
X2017.01) %>%
filter_at(vars(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01,
X2016.01, X2017.01),all_vars(!is.na(.)))
View(city_summary)
# selects year columns and summarizes average median prices each year
city_summary <- city_data %>%
select(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01, X2016.01,
X2017.01) %>%
filter_at(vars(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01,
X2016.01, X2017.01),all_vars(!is.na(.))) %>%
summarize_all(mean)
View(city_summary)
View(city_summary)
View(city_summary)
#flips summary data frame for easier use with ggplot
city_year_averages <- t(city_summary)
View(city_year_averages)
View(city_year_averages)
#flips summary data frame for easier use with ggplot
city_year_averages <- t(city_summary)
colnames(city_year_averages) <- c("Year", "Avg_Price")
View(city_year_averages)
#flips summary data frame for easier use with ggplot
city_year_averages <- t(city_summary)
rownames(city_year_averages) <- NULL
colnames(city_year_averages) <- c("Year", "Avg_Price")
# makes summary data easier for ggplot to read
city_year_averages <- t(city_summary)
city_year_averages$year <- rownames(city_year_averages)
rownames(city_year_averages) <- NULL
View(city_year_averages)
# makes summary data easier for ggplot to read
city_year_averages <- t(city_summary)
city_year_averages <- cbind(Row.Names = rownames(city_year_averages),
city_year_averages)
rownames(city_year_averages) <- NULL
View(city_year_averages)
city_year_averages <- cbind(year = rownames(city_year_averages),
city_year_averages)
rownames(city_year_averages) <- NULL
View(city_year_averages)
# makes summary data easier for ggplot to read
city_year_averages <- t(city_summary)
city_year_averages <- cbind(year = rownames(city_year_averages),
city_year_averages)
rownames(city_year_averages) <- NULL
View(city_year_averages)
View(city_data)
View(city_year_averages)
# selects year columns and summarizes average median prices each year
city_summary <- city_data %>%
select(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01, X2016.01,
X2017.01) %>%
filter_at(vars(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01,
X2016.01, X2017.01),all_vars(!is.na(.))) %>%
summarize_all(round(mean))
# selects year columns and summarizes average median prices each year
city_summary <- city_data %>%
select(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01, X2016.01,
X2017.01) %>%
filter_at(vars(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01,
X2016.01, X2017.01),all_vars(!is.na(.))) %>%
summarize_all(mean)
# makes summary data easier for ggplot to read
city_year_averages <- t(city_summary)
city_year_averages <- cbind(year = rownames(city_year_averages),
city_year_averages)
rownames(city_year_averages) <- NULL
city_year_averages$V2 <- round(city_year_averages$V2)
city_year_averages$V2 <- round(city_year_averages[V2])
# makes summary data easier for ggplot to read
city_year_averages <- t(city_summary)
city_year_averages <- cbind(year = rownames(city_year_averages),
city_year_averages)
rownames(city_year_averages) <- NULL
city_year_averages$V2 <- round(city_year_averages[V2])
# makes summary data easier for ggplot to read
city_year_averages <- t(city_summary)
city_year_averages <- cbind(year = rownames(city_year_averages),
city_year_averages)
rownames(city_year_averages) <- NULL
View(city_year_averages)
is.data.frame(city_year_averages)
data.frame(city_year_averages)
city_avg_data <- data.frame(city_year_averages)
View(city_avg_data)
city_year_averages <- data.frame(city_year_averages)
city_year_averages <- t(city_summary)
city_year_averages <- cbind(year = rownames(city_year_averages),
city_year_averages)
rownames(city_year_averages) <- NULL
city_year_averages <- data.frame(city_year_averages)
View(city_year_averages)
View(city_year_averages)
city_year_averages <- data.frame(city_year_averages) %>%
mutate(avg = round(V2)) %>%
select(year, avg)
summary_df <- data.frame(city_year_averages)
city_year_averages <- data.frame(t(city_summary))
View(city_year_averages)
View(summary_df)
View(summary_df)
city_year_averages <- summary_df %>%
mutate(avg = round(V2)) %>%
select(year, avg)
city_year_averages <- summary_df %>%
mutate(avg == round(V2)) %>%
select(year, avg)
city_year_averages <- summary_df %>%
mutate(average = round(V2))
city_year_averages <- summary_df %>%
mutate(round(V2))
city_year_averages <- summary_df %>%
mutate(a = round(V2, 1))
# makes summary data easier for ggplot to read and rounds values
city_year_averages <- t(city_summary)
city_year_averages <- cbind(year = rownames(city_year_averages),
city_year_averages)
rownames(city_year_averages) <- NULL
city_avg_df <- summary_df %>%
mutate(a = round(V2, 1))
# loads needed packages
library(dplyr)
library(ggplot2)
# loads the data set
city_data <- read.csv(
"../project-data/median-listing-price/City_MedianListingPrice_AllHomes.csv",
stringsAsFactors = FALSE)
# selects year columns and summarizes average median prices each year
city_summary <- city_data %>%
select(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01, X2016.01,
X2017.01) %>%
filter_at(vars(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01,
X2016.01, X2017.01),all_vars(!is.na(.))) %>%
summarize_all(mean)
# makes summary data easier for ggplot to read and rounds values
city_year_averages <- t(city_summary)
city_year_averages <- cbind(year = rownames(city_year_averages),
city_year_averages)
rownames(city_year_averages) <- NULL
summary_df <- data.frame(city_year_averages)
city_avg_df <- summary_df %>%
mutate(a = round(V2, 1))
round(summary_df$V2)
round(summary_df[V2])
city_year_averages <- round(summary_df)
city_year_averages <- round_df(summary_df
)
# selects year columns and summarizes average median prices each year
city_summary <- city_data %>%
select(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01, X2016.01,
X2017.01) %>%
filter_at(vars(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01,
X2016.01, X2017.01),all_vars(!is.na(.))) %>%
mutate(across(where(is.numeric), round, 1))
View(city_summary)
# selects year columns and summarizes average median prices each year
city_summary <- city_data %>%
select(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01, X2016.01,
X2017.01) %>%
filter_at(vars(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01,
X2016.01, X2017.01),all_vars(!is.na(.))) %>%
mutate(across(where(is.numeric), round, 1)) %>%
summarize_all(mean)
View(city_summary)
# selects year columns and summarizes average median prices each year
city_summary <- city_data %>%
select(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01, X2016.01,
X2017.01) %>%
filter_at(vars(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01,
X2016.01, X2017.01),all_vars(!is.na(.))) %>%
summarize_all(mean) %>%
mutate(across(where(is.numeric), round, 1))
View(city_summary)
# makes summary data easier for ggplot to read
city_year_averages <- t(city_summary)
city_year_averages <- cbind(year = rownames(city_year_averages),
city_year_averages)
rownames(city_year_averages) <- NULL
summary_df <- data.frame(city_year_averages)
View(summary_df)
View(summary_df)
# creates the bar graph using summary data
ggplot(data = summary_df, aes(x = year, y = V2)) +
geom_bar(stat="identity")
# creates the bar graph using summary data
ggplot(data = summary_df, aes(x = year, y = V2)) +
geom_bar(position = "dodge", stat="identity")
# creates the bar graph using summary data
ggplot(data = summary_df, aes(x = year, y = V2, fill = sample)) +
geom_bar(position = "dodge", stat="identity")
# selects year columns and summarizes average median prices each year
city_summary <- city_data %>%
select(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01, X2016.01,
X2017.01) %>%
filter_at(vars(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01,
X2016.01, X2017.01),all_vars(!is.na(.))) %>%
summarize_all(mean) %>%
mutate(across(where(is.numeric), round, 0))
# makes summary data easier for ggplot to read
city_year_averages <- t(city_summary)
city_year_averages <- cbind(year = rownames(city_year_averages),
city_year_averages)
rownames(city_year_averages) <- NULL
summary_df <- data.frame(city_year_averages)
# creates the bar graph using summary data
ggplot(data = summary_df, aes(x = year, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label=len), vjust=1.6, color = "white", size=3.5) +
theme_minimal()
# creates the bar graph using summary data
labels <- c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017")
ggplot(data = summary_df, aes(x = year, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = labels), vjust=1.6, color = "white", size=3.5) +
theme_minimal()
ggplot(data = summary_df, aes(x = year, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = labels), vjust=1.6, color = "white", size=3.5) +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()))
ggplot(data = summary_df, aes(x = year, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = labels), vjust=1.6, color = "white", size=3.5) +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(), vjust=1.6, color = "white", size=3.5) +
theme_minimal()
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal()
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price")
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price") +
scale_y_continuous(breaks=seq(-50,50,10), labels=seq(0,100,10))
ggplot(data = summary_df, aes(x = labels, y = V2 - 250000)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price")
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15))
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15)) +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price")
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price")
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_y_continuous(expand = c(0,0),
limits = c(0,30)) +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price")
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_y_continuous(expand = c(0,0),
limits = c(0,30)) +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price") +
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_y_continuous(expand = c(0,0),
limits = c(0,30)) +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price") +
coord_cartesian(ylim=c(0,50000))
View(summary_df)
# creates the bar graph using summary data
labels <- c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017")
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_y_continuous(expand = c(0,0),
limits = c(0,30)) +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price") +
coord_cartesian(ylim=c(25000,50000))
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_y_continuous(expand = c(0,0),
limits = c(0,30)) +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price") +
ylim(0:30000)
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_y_continuous(expand = c(0,0),
limits = c(0,30)) +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price") +
ylim(c(0, 30000))
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_y_continuous(expand = c(0,0),
limits = c(0,30)) +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price") +
expand_limits(y = 0)
View(summary_df)
summary_df$V2
summary_df$V2 = as.numeric(summary_df$V2)
summary_df$V2
# creates the bar graph using summary data
labels <- c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017")
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_y_continuous(expand = c(0,0),
limits = c(0,30)) +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price") +
expand_limits(y = 0)
# creates the bar graph using summary data
labels <- c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017")
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_y_continuous(expand = c(0,0),
limits = c(0,30)) +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price") +
expand_limits(y = c(0, 30000))
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_y_continuous(expand = c(0,0),
limits = c(0,30)) +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price") +
coord_cartesian(ylim = c(0, 30000))
View(summary_df)
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_y_continuous(expand = c(0,0),
limits = c(0,30)) +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price") +
coord_cartesian(ylim = c(0, 30000))
ggplot(data = summary_df, aes(x = labels, y = V2)) +
coord_cartesian(ylim = c(0, 30000)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_y_continuous(expand = c(0,0),
limits = c(0,30)) +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price")
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_y_continuous(expand = c(0, 30000),
limits = c(0,30)) +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price")
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price") +
coord_cartesian(ylim = c(0, 30000))
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price") +
coord_cartesian(ylim = c(0, 300000))
View(summary_df)
# creates the bar graph using summary data
labels <- c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017")
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price") +
scale_y_continuous(labels = comma)
options(scipen=10000)
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price") +
scale_y_continuous(labels = comma)
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price") +
coord_cartesian(ylim = c(0, 300000))
# creates the bar graph using summary data
labels <- c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017")
options(scipen=10000)
# selects year columns and summarizes average median prices each year
city_summary <- city_data %>%
select(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01, X2016.01,
X2017.01) %>%
filter_at(vars(X2010.01, X2011.01, X2012.01, X2013.01, X2014.01, X2015.01,
X2016.01, X2017.01),all_vars(!is.na(.))) %>%
summarize_all(mean) %>%
mutate(across(where(is.numeric), round, 0))
# makes summary data easier for ggplot to read
city_year_averages <- t(city_summary)
city_year_averages <- cbind(year = rownames(city_year_averages),
city_year_averages)
rownames(city_year_averages) <- NULL
summary_df <- data.frame(city_year_averages)
summary_df$V2 = as.numeric(summary_df$V2)
# creates the bar graph using summary data
labels <- c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017")
options(scipen=10000)
ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price (USD)") +
coord_cartesian(ylim = c(0, 300000))
price_bar_graph <- ggplot(data = summary_df, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price (USD)") +
coord_cartesian(ylim = c(0, 300000))
library(lintr)
lint("bar-chart.R")
summary_df <- data.frame(city_year_averages)
summary_df$V2 <- as.numeric(summary_df$V2)
lint("bar-chart.R")
lint("bar-chart.R")
summary_data <- data.frame(city_year_averages)
summary_data$V2 <- as.numeric(summary_df$V2)
# creates the bar graph using summary data
labels <- c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017")
options(scipen = 10000)
price_bar_graph <- ggplot(data = summary_data, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price (USD)") +
coord_cartesian(ylim = c(0, 300000))
lint("bar-chart.R")
summary_data <- data.frame(city_year_averages)
summary_data[[V2]] <- as.numeric(summary_df$V2)
summary_data[["V2"]] <- as.numeric(summary_df$V2)
# creates the bar graph using summary data
labels <- c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017")
options(scipen = 10000)
price_bar_graph <- ggplot(data = summary_data, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price (USD)") +
coord_cartesian(ylim = c(0, 300000))
summary_data <- data.frame(city_year_averages)
summary_data[["V2"]] <- as.numeric(summary_df$V2)
View(summary_data)
# creates the bar graph using summary data
labels <- c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017")
options(scipen = 10000)
price_bar_graph <- ggplot(data = summary_data, aes(x = labels, y = V2)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
xlab("Year") +
ylab("Average Median House Price (USD)") +
coord_cartesian(ylim = c(0, 300000))
lint("bar-chart.R")
