library(datasets)
head(iris)
summary(iris$Species) #Categorical Variable
summary(iris$Sepal.Length) #Quantitative Variable
summary(iris) #Entire Data Frame
pacman::p_load(pacman,dplyr,GGally,ggplot2,ggthemes,ggvis,httr,lubridate,
plotly,rio,rmarkdown,shiny,stringr,tidyr)
head(iris)
p_load(psych)
describe(iris$Sepal.Length)
describe(iris)
hist(iris$Petal.Length)
summary(iris$Petal.Length)
summary(Iris$species)
summary(iris$species)
summary(iris$species)
summary(iris$Species)
#Versicolor
hist(iris$Petal.Length[iris$Species == "versicolor"],
main = "Petal Length: Versicolor" )
#Virginica
hist(iris$Petal.Length[iris$Species == "Virginica"],
main ="PEtal Length: Virginica")
#Virginica
hist(iris$Petal.Length[iris$Species == "Virginica"],
main ="Petal Length: Virginica")
#Virginica
hist(iris$Petal.Length[iris$Species == "Virginica"],main ="Petal Length: Virginica")
#Versicolor
hist(iris$Petal.Length[iris$Species == "versicolor"],
main = "Petal Length: Versicolor" )
#Virginica
hist(iris$Petal.Length[iris$Species == "virginica"],
main = "Petal Length: Virginica" )
hist(iris$Petal.Length[iris$Species == "virginica"&
iris$Petal.Length<5.5],
main = "Petal Length: Versicolor" )
hist(iris$Petal.Length[iris$Species == "virginica"&
iris$Petal.Length<5.5],
main = "Petal Length: Virginica < 5.5" )
Caculator <- function(sign,x,y) {
if (sign = "+"){
result <- x+y
return(result)
}else if (sign = "-"){
result <- x-y
return(result)
}else if (sign = "*"){
sum <- x*y
return(sum())
}else if (sign = "/"){
sum <- x/y
return(sum())
}
}
Caculator <- function(sign,x,y) {
if (sign = "+"){
result <- x+y
return(result)
}else if (sign = "-"){
result <- x-y
return(result)
}else if (sign = "*"){
sum <- x*y
return(sum())
}else if (sign = "/"){
sum <- x/y
return(sum())
}
}
Caculator <- function(sign,x,y) {
if (sign = "+") {
result <- x+y
return(result)
}
else if (sign = "-") {
result <- x-y
return(result)
}
else if (sign = "*") {
result <- x*y
return(result)
}
else if (sign = "/") {
result <- x/y
return(result)
}
}
Caculator <- function(sign,x,y) {
if (sign = "+") {
result <- x+y
return(result)
}
else if (sign = "-") {
result <- x-y
return(result)
}
else if (sign = "*") {
result <- x*y
return(result)
}
else if (sign = "/") {
result <- x/y
return(result)
}
else{
paste("error")
}
}
Caculator <- function(sign,x,y) {
if (sign = "+") {
result <- x+y
return(result)
}
else if (sign = "-") {
result <- x-y
return(result)
}
else if (sign = "*") {
result <- x*y
return(result)
}
else if (sign = "/") {
result <- x/y
return(result)
}
else{
paste("error")
}
}
else if (sign == "/") {
result <- x/y
return(result)
}
Caculator <- function(sign,x,y) {
if (sign == "+") {
result <- x+y
return(result)
}
else if (sign == "-") {
result <- x-y
return(result)
}
else if (sign == "*") {
result <- x*y
return(result)
}
else if (sign == "/") {
result <- x/y
return(result)
}
else{
paste("error")
}
}
calculator("*",3,4)
caculator("*",3,4)
calculator <- function(sign,x,y) {
if (sign == "+") {
result <- x+y
return(result)
}
else if (sign == "-") {
result <- x-y
return(result)
}
else if (sign == "*") {
result <- x*y
return(result)
}
else if (sign == "/") {
result <- x/y
return(result)
}
else{
paste("error")
}
}
calculator("*",3,4)
calculator("*","l",4)
calculator("-",6,4)
name <- readline(prompt="enter name: ")
if (age =< 21) {
print("You can drink!")
} else {
print("No drinking for you")
}
if (age <= 21) {
print("You can drink!")
} else {
print("No drinking for you")
}
age <- readline(prompt="what is your age")
legality <- function(name, age)
name <- readline(prompt="enter name: ")
ages <- readline(prompt="what is your age")
ages <- readline(prompt="what is your age:")
if (age <= 21) {
print("You can drink!")
} else {
print("No drinking for you")
}
legality <- function()
legality <- function(){
name <- readline(prompt="enter name: ")
ages <- readline(prompt="what is your age:")
if (age <= 21) {
print("You can drink!")
} else {
print("No drinking for you")
}
}
print(legality())
paste("you may enter")
legality <- function() {
name <- readline(prompt="What is your age: ")
if(age < 21) {
paste("You can enter the club")
} else {
paste("you may enter")
}
}
legality()
legality()
legality()
legality <- function() {
age <- readline(prompt="What is your age: ")
if(age < 21) {
paste("You cannot enter the club")
} else {
paste("you may enter")
}
}
legality()
legality()
store_items <- data.frame(item, price)
item <- c("apple", "yogurt","candy","banana")
prices <- c(1, 3, 0.5, 1.5)
store_items <- data.frame(item, price)
store_items <- data.frame(item, prices)
View(store_items)
View(store_items)
store_items$prices
price_per_dozen <- store_items$prices *12
price_per_dozen <- price_per_dozen*0.9
store_items$price_per_dozen
store_items$price_per_dozen <- price_per_dozen
store_items$price_per_dozen <- store_items$price*12*0.9
store_items$price_per_dozen <- store_items$prices*12*0.9
View(store_items)
library(dplyr)
get_summary_info <- function(dataset) {
ret <- list()
ret$length <- length(dataset)
return(ret)
}
data <- read.csv("C:/Users/rchap/Info201/INFO-201-Final-Project/project-data/median-listing-price/State_MedianListingPrice_AllHomes.csv")
get_summary_info(data)
get_summary_info <- function(dataset) {
summary_list <- list()
summary_list$length <- unique(colnames(dataset))
return(ret)
}
data <- read.csv("C:/Users/rchap/Info201/INFO-201-Final-Project/project-data/median-listing-price/State_MedianListingPrice_AllHomes.csv")
get_summary_info(data)
get_summary_info <- function(dataset) {
summary_list <- list()
summary_list$length <- unique(colnames(dataset))
return(summary_list)
}
data <- read.csv("C:/Users/rchap/Info201/INFO-201-Final-Project/project-data/median-listing-price/State_MedianListingPrice_AllHomes.csv")
get_summary_info(data)
get_summary_info <- function(dataset) {
summary_list <- list()
summary_list$length <- length(unique(colnames(dataset)))
summar
return(summary_list)
}
data <- read.csv("C:/Users/rchap/Info201/INFO-201-Final-Project/project-data/median-listing-price/State_MedianListingPrice_AllHomes.csv")
get_summary_info(data)
midwest
library(dplyr)
View(midwest)
library(ggplot2)
View(midwest)
library(dplyr)
library(lintr)
library(tidyr)
library(tidyverse)
library(stringr)
library(lintr)
aggregate_table <- function(data) {
data %>%
#Getting all the year columns and the Region Name column
select(matches("201|RegionName")) %>%
#Using Gather to Make Month Column have old column values as rows
gather(key = "month", value = "list_price", -RegionName) %>%
group_by(RegionName) %>%
filter(
!is.na(list_price)
) %>%
mutate(
list_price = as.numeric(list_price)
) %>%
rename(
Region.Name = RegionName,
List.Price = list_price
) %>%
summarise(
List.Price = mean(List.Price, na.rm = TRUE)
) %>%
arrange(desc(List.Price)) %>%
top_n(15)
}
highest_cities_table1 <- aggregate_table(city_data)
# The particular group calculation was done because each of the data sets
# we are using is organized by a different type of region, city, state, county,
# neighborhood, and Zip code. The data can be applied to show the average list
# price by region over the course of 7 years. It displays the highest 10 prices.
city_data <- read.csv(
"../project-data/median-listing-price/City_MedianListingPrice_AllHomes.csv",
stringsAsFactors = FALSE)
setwd("C:/Users/rchap/Info201/INFO-201-Final-Project/scripts")
# The particular group calculation was done because each of the data sets
# we are using is organized by a different type of region, city, state, county,
# neighborhood, and Zip code. The data can be applied to show the average list
# price by region over the course of 7 years. It displays the highest 10 prices.
city_data <- read.csv(
"../project-data/median-listing-price/City_MedianListingPrice_AllHomes.csv",
stringsAsFactors = FALSE)
highest_cities_table1 <- aggregate_table(city_data)
lint("aggregate_Table.R")
lint("aggregate_Table.R")
lint("aggregate_Table.R")
lint("aggregate_Table.R")
